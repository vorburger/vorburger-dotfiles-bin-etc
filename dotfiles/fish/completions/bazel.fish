#!/usr/bin/env fish
# Copyright 2020 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Fish completion for Bazel commands and options.
#
# This script was generated from a specific Bazel build distribution. See
# https://github.com/bazelbuild/bazel/blob/master/scripts/generate_fish_completion.py
# for details and implementation.
set BAZEL_COMMAND_LIST analyze-profile aquery build canonicalize-flags clean coverage cquery dump fetch help info license mobile-install print_action query run shutdown test version

function __bazel_seen_subcommand -d "Checks whether the current command line contains a bazel subcommand."
    __fish_seen_subcommand_from $BAZEL_COMMAND_LIST
end
complete -c bazel -n "not __bazel_seen_subcommand" -l "autodetect_server_javabase" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noautodetect_server_javabase" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "batch" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nobatch" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "batch_cpu_scheduling" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nobatch_cpu_scheduling" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "bazelrc" -d "a string; default: see description" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "block_for_lock" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noblock_for_lock" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "client_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noclient_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "connect_timeout_secs" -d "an integer; default: \"30\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "expand_configs_in_place" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noexpand_configs_in_place" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "failure_detail_out" -d "a path; default: see description" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "home_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nohome_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "idle_server_tasks" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noidle_server_tasks" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "ignore_all_rc_files" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noignore_all_rc_files" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "io_nice_level" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "local_startup_timeout_secs" -d "an integer; default: \"120\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "macos_qos_class" -d "a string; default: \"default\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "max_idle_secs" -d "an integer; default: \"10800\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "output_base" -d "a path; default: see description" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "output_user_root" -d "a path; default: see description" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "preemptible" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nopreemptible" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "server_jvm_out" -d "a path; default: see description" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "shutdown_on_low_sys_mem" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noshutdown_on_low_sys_mem" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "system_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nosystem_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "unlimit_coredumps" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nounlimit_coredumps" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "windows_enable_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "nowindows_enable_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "workspace_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "noworkspace_rc" -d "a boolean; default: \"true\""
complete -c bazel -n "not __bazel_seen_subcommand" -l "host_jvm_args" -d "a string; may be used multiple times" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "host_jvm_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -l "server_javabase" -d "a string; default: \"\"" -r
complete -c bazel -n "not __bazel_seen_subcommand" -xa "analyze-profile" -d "Analyzes build profile data." -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from analyze-profile"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "aquery" -d "Analyzes the given targets and queries the action graph." -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "aspect_deps" -d "off, conservative or precise; default: \"conservative\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "deduplicate_depsets" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nodeduplicate_depsets" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "implicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noimplicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "include_artifacts" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinclude_artifacts" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "include_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinclude_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "include_commandline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinclude_commandline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "include_file_write_contents" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinclude_file_write_contents" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "include_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinclude_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "infer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noinfer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "line_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noline_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nonodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "output" -d "a string; default: \"text\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "relative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "norelative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "skyframe_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noskyframe_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "notool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "universe_scope" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from aquery" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from aquery" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "build" -d "Builds the specified targets." -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from build" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from build" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "canonicalize-flags" -d "Canonicalizes a list of bazel options." -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "canonicalize_policy" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocanonicalize_policy" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noshow_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "for_command" -d "a string; default: \"build\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "invocation_policy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from canonicalize-flags"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "clean" -d "Removes output files and optionally stops the server." -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noasync" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "expunge" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexpunge" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remove_all_convenience_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremove_all_convenience_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from clean" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from clean"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "coverage" -d "Generates code coverage report for specified test targets." -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "print_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noprint_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "notest_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "verbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noverbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from coverage" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from coverage" -fa "(bazel query -k 'tests(//...)' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "cquery" -d "Loads, analyzes, and queries the specified targets w/ configurations." -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "aspect_deps" -d "off, conservative or precise; default: \"conservative\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "implicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noimplicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "include_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noinclude_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "infer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noinfer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "line_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noline_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nonodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "output" -d "a string; default: \"label\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "relative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "norelative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_config_fragments" -d "off, direct or transitive; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "transitions" -d "full, lite or none; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "universe_scope" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "print_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noprint_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notest_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "verbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noverbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from cquery" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from cquery" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "dump" -d "Dumps the internal state of the bazel server process." -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "action_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noaction_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "packages" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nopackages" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "rule_classes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "norule_classes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "norules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "skyframe" -d "off, summary, count, deps or rdeps; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "skykey_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \".*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "skylark_memory" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from dump"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "fetch" -d "Fetches external repositories that are prerequisites to the targets." -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from fetch" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "help" -d "Prints help for commands, or the index." -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "help_verbosity" -d "long, medium or short; default: \"medium\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from help" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from help" -fa "startup_options target-syntax info-keys"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "info" -d "Displays runtime info about the bazel server." -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_make_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noshow_make_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from info" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from info" -fa "workspace install_base output_base execution_root output_path client-env bazel-bin bazel-genfiles bazel-testlogs release server_pid server_log package_path used-heap-size used-heap-size-after-gc committed-heap-size max-heap-size gc-time gc-count java-runtime java-vm java-home character-encoding defaults-package build-language default-package-path starlark-semantics"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "license" -d "Prints the license of this software." -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from license" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from license"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "mobile-install" -d "Installs targets to mobile devices." -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "mode" -d "classic, classic_internal_test_do_not_use or skylark; default: \"classic\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "adb" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incremental" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincremental" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "split_apks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosplit_apks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "adb_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "device" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "start" -d "no, cold, warm or debug; default: \"NO\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incremental_install_verbosity" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from mobile-install" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "print_action" -d "Prints the command line args for compiling a file." -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "print_action_mnemonics" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from print_action" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from print_action" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "query" -d "Executes a dependency graph query." -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "aspect_deps" -d "off, conservative or precise; default: \"conservative\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_graphless_query" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "implicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noimplicit_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "include_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noinclude_aspects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_display_source_file_location" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_lexicographical_output" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_lexicographical_output" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "infer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noinfer_universe_scope" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "line_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noline_terminator_null" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nonodep_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "order_output" -d "no, deps, auto or full; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "output" -d "a string; default: \"label\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "query_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "relative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "norelative_locations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "strict_test_suite" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nostrict_test_suite" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "tool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "notool_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "universe_scope" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from query" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from query" -fa "(bazel query -k '//...' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "run" -d "Runs the specified target." -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "script_path" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from run" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from run" -fa "(bazel query -k 'kind(\".*_binary\", //...)' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "shutdown" -d "Stops the bazel server." -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "iff_heap_size_greater_than" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from shutdown"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "test" -d "Builds and runs the specified test targets." -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "check_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocheck_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "dynamic_local_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "dynamic_remote_strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_docker_image" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_docker_use_customized_images" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_dynamic_exclude_tools" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_dynamic_local_load_factor" -d "a double; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_dynamic_slow_remote_time" -d "An immutable length of time.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_enable_docker_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_inprocess_symlink_creation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_local_execution_delay" -d "an integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_remotable_source_manifests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_reuse_sandbox_directories" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_sandbox_async_tree_delete_idle_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_sandboxfs_path" -d "a string; default: \"sandboxfs\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_split_coverage_postprocessing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_split_xml_generation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_strict_fileset_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_total_worker_memory_limit_mb" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_use_hermetic_linux_sandbox" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_use_sandboxfs" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_use_windows_sandbox" -d "a tri-state (auto, yes, no); default: \"false\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_windows_sandbox_path" -d "a string; default: \"BazelSandbox.exe\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_worker_as_resource" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_worker_cancellation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_max_multiplex_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_worker_multiplex" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_worker_multiplex_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_worker_strict_flagfiles" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "genrule_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "high_priority_workers" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remote_symlinks" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "internal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nointernal_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "loading_phase_threads" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "modify_execution_info" -d "regex=[+-]key,regex=[+-]key,...; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noremote_allow_symlink_upload" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_base" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_tmpfs_path" -d "an absolute path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "spawn_strategy" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strategy" -d "a '[name=]value1[,..,valueN]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strategy_regexp" -d "a '<RegexFilter>=value[,value]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "worker_extra_flag" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "worker_max_instances" -d "[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "worker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noworker_quit_after_build" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "worker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noworker_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "worker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noworker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_crosstool_top" -d "a build target label; default: \"//external:android/crosstool\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_manifest_merger" -d "legacy, android or force_android; default: \"android\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_sdk" -d "a build target label; default: \"@bazel_tools//tools/android:sdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_grte_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cc_output_directory_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "coverage_output_generator" -d "a build target label; default: \"@bazel_tools//tools/test:lcov_merger\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "coverage_report_generator" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_report_generator\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "coverage_support" -d "a build target label; default: \"@bazel_tools//tools/test:coverage_support\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "crosstool_top" -d "a build target label; default: \"@bazel_tools//tools/cpp:toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "custom_malloc" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_add_exec_constraints_to_targets" -d "a '<RegexFilter>=<label1>[,<label2>,...]' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_enable_objc_cc_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_include_xcode_execution_requirements" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_prefer_mutual_xcode" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "extra_execution_platforms" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "extra_toolchains" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_compiler" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_crosstool_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_grte_top" -d "a label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_platform" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_expand_if_all_available_in_flag_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_runtimes_filegroups" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_dont_emit_static_libgcc" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_dont_enable_host_nonhost_crosstool_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_enable_android_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_enable_apple_toolchain_resolution" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_linkopts_in_user_link_flags" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_make_thinlto_command_lines_standalone" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remove_legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_require_ctx_in_configure_features" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "interface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nointerface_shared_objects" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "macos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "minimum_os_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "platform_mappings" -d "a relative path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "platforms" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "python2_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "python3_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "python_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "python_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "target_platform_fallback" -d "a build target label; default: \"@local_config_platform//:host\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tvos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchos_sdk_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "xcode_version" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "xcode_version_config" -d "a build target label; default: \"@bazel_tools//tools/cpp:host_xcodes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noapple_enable_auto_dsym_dbg" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noapple_generate_dsym" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_runfile_links" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_runfile_manifests" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_test_dwp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cc_proto_library_header_suffixes" -d "comma-separated list of options; default: \".pb.h\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cc_proto_library_source_suffixes" -d "comma-separated list of options; default: \".pb.cc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_proto_descriptor_sets_include_source_info" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_proto_extra_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_save_feature_state" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_use_validation_aspect" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fission" -d "a set of compilation modes; default: \"no\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "legacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nolegacy_external_runfiles" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "objc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noobjc_generate_linkmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "output_groups" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "run_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "norun_validations" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "save_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nosave_temps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_cpu" -d "a string; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noandroid_databinding_use_androidx" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noandroid_databinding_use_v3_4_args" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_dynamic_mode" -d "off, default or fully; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_manifest_merger_order" -d "alphabetical, alphabetical_by_configuration or dependency; default: \"alphabetical\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noandroid_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apple_bitcode" -d "'mode' or 'platform=mode', where 'mode' is none, embedded_markers or embedded, and 'platform' is ios, watchos, tvos, macos or catalyst; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "aspects" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bep_maximum_open_remote_upload_files" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_python_zip" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "catalyst_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "collect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocollect_code_coverage" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cs_fdo_absolute_path" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cs_fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cs_fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "define" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "dynamic_mode" -d "off, default or fully; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "enable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noenable_fdo_profile_absolute_path" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "enable_runfiles" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_action_listener" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_android_compress_java_resources" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_android_databinding_v2" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_android_resource_shrinking" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_android_rewrite_dexes_with_rex" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_convenience_symlinks" -d "normal, clean, ignore or log_only; default: \"normal\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_convenience_symlinks_bep_event" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_multi_cpu" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_objc_fastbuild_options" -d "comma-separated list of options; default: \"-O0,-DDEBUG=1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_omitfp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_platform_in_output_dir" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_use_llvm_covmap" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fat_apk_cpu" -d "comma-separated list of options; default: \"armeabi-v7a\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nofat_apk_hwasan" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fdo_instrument" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fdo_optimize" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fdo_prefetch_hints" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "fdo_profile" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "features" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "force_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noforce_pic" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_action_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_compilation_mode" -d "fastbuild, dbg or opt; default: \"opt\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_conlyopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_copt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_cpu" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_cxxopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_force_python" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_avoid_conflict_dlls" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_merge_genfiles_directory" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_use_platforms_repo_for_constraints" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "instrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noinstrument_test_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "instrumentation_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-/javatests[/:],-/test/java[/:]\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_multi_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "legacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nolegacy_whole_archive" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "linkopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ltobackendopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ltoindexopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "macos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "macos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "objc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noobjc_debug_with_GLIBCXX" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "objc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noobjc_enable_binary_stripping" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "objccopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "per_file_copt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "per_file_ltobackendopt" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "platform_suffix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "propeller_optimize" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "propeller_optimize_absolute_cc_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "propeller_optimize_absolute_ld_profile" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_download_outputs" -d "all, minimal or toplevel; default: \"all\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_download_symlink_template" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "run_under" -d "a prefix in front of command; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "share_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noshare_native_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "stamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nostamp" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strip" -d "always, sometimes or never; default: \"sometimes\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "stripopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "swiftcopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "symlink_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tvos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tvos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchos_cpus" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchos_minimum_os" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "xbinary_fdo" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "auto_cpu_environment_group" -d "a build target label; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "check_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocheck_licenses" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "check_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocheck_visibility" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "desugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nodesugar_for_android" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "enforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noenforce_constraints" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_allow_android_library_deps_without_srcs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_check_desugar_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_desugar_java8_libs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_docker_privileged" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_import_deps_checking" -d "off, warning or error; default: \"OFF\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_sandboxfs_map_symlink_targets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_strict_java_deps" -d "off, warn, error, strict or default; default: \"default\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_check_testonly_for_output_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_native_android_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_native_apple_binary_rule" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_force_strict_header_check_from_starlark" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_legacy_local_fallback" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_validate_top_level_header_inclusions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_add_mount_pair" -d "a single path or a 'source:target' pair; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_block_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nosandbox_default_allow_network" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nosandbox_fake_hostname" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nosandbox_fake_username" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_writable_path" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nostrict_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strict_proto_deps" -d "off, warn, error, strict or default; default: \"error\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strict_public_imports" -d "off, warn, error, strict or default; default: \"off\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "strict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nostrict_system_includes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "target_environment" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "apk_signing_method" -d "v1, v2, v1_v2 or v4; default: \"v1_v2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "device_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nodevice_debug_entitlements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_signing_cert_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_config_setting_private_default_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disallow_legacy_py_provider" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_enforce_config_setting_visibility" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "allow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noallow_analysis_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "analysis_testing_deps_limit" -d "an integer; default: \"2000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "break_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobreak_build_on_parallel_dex2oat_failure" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "check_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocheck_tests_up_to_date" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_android_use_parallel_dex2oat" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "flaky_test_attempts" -d "a positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noios_memleaks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ios_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "local_test_jobs" -d "an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]<float>) eg. \"auto\", \"HOST_CPUS*.5\"; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "runs_per_test" -d "a positive integer or test_regex@runs. This flag may be passed more than once; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "notest_keep_going" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_strategy" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_timeout" -d "a single integer or comma-separated list of 4 integers; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_tmpdir" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tvos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tvos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchos_simulator_device" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchos_simulator_version" -d "a dotted version (for example '2.3' or '3.3alpha2.4'); default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "zip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nozip_undeclared_test_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "collapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocollapse_duplicate_defines" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_filter_library_jar_with_program_jar" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_inmemory_dotd_files" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_inmemory_jdeps_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_objc_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_parse_headers_skipped_if_corresponding_srcs_found" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_retain_test_configuration_across_testonly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_starlark_cc_import" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_unsupported_and_brittle_include_scanning" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincremental_dexing" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "objc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noobjc_use_dotd_pruning" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "process_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noprocess_headers_in_dependencies" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "trim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "notrim_test_configuration" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "use_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nouse_singlejar_apkbuilder" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "announce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noannounce" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_collect_local_sandbox_action_metrics" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_debug_spawn_scheduler" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_docker_verbose" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_materialize_param_files_directly" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_repository_resolved_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "explain" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "materialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nomaterialize_param_files" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "max_config_changes_to_show" -d "an integer; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "max_test_output_bytes" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "output_filter" -d "a valid Java regular expression; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "print_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noprint_relative_test_log_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "progress_report_interval" -d "an integer in 0-3600 range; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_print_execution_messages" -d "failure, success or all; default: \"failure\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "sandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nosandbox_debug" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "show_result" -d "an integer; default: \"1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_output" -d "summary, errors, all or streamed; default: \"summary\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_summary" -d "short, terse, detailed, none or testcase; default: \"short\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "notest_verbose_timeout_warnings" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "toolchain_resolution_debug" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"-.*\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "verbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noverbose_explanations" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "verbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noverbose_failures" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "verbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noverbose_test_summary" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "aspects_parameters" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "flag_alias" -d "a 'name=value' flag alias; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_default_to_explicit_init_py" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_py2_outputs_are_suffixed" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_py3_is_default" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_use_python_toolchains" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "python_version" -d "PY2 or PY3; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "target_pattern_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_guard_against_concurrent_changes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_remote_cache_async" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_remote_cache_compression" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_capture_corrupted_outputs" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_downloader" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_remote_execution_keepalive" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_grpc_log" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_remote_merkle_tree_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_remote_merkle_tree_cache_size" -d "a long integer; default: \"1000\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remote_build_event_upload_respect_no_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remote_output_paths_relative_to_input_root" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remote_results_ignore_disk" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noremote_accept_cached" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_bytestream_uri_prefix" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_cache" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_cache_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_default_exec_properties" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_default_platform_properties" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_downloader_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_exec_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_execution_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_executor" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_instance_name" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noremote_local_fallback" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_local_fallback_strategy" -d "a string; default: \"local\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_max_connections" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_result_cache_priority" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_retries" -d "an integer; default: \"5\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_timeout" -d "An immutable length of time.; default: \"60s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noremote_upload_local_results" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "remote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noremote_verify_downloads" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "auto_output_filter" -d "none, all, packages or subpackages; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_manual_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "build_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nobuild_tests_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "combined_report" -d "none or lcov; default: \"none\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "compile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nocompile_one_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "deleted_packages" -d "comma-separated list of package names; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "discard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nodiscard_analysis_cache" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "disk_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "embed_label" -d "a one-line string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "execution_log_binary_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "execution_log_json_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "expand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexpand_test_suites" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_cancel_concurrent_tests" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_execution_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_execution_log_spawn_metrics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_extra_action_filter" -d "a comma-separated list of regex expressions with prefix '-' specifying excluded paths; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_extra_action_top_level_only" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_fetch_all_coverage_outputs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_generate_llvm_lcov" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_j2objc_header_map" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_j2objc_shorter_header_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_java_classpath" -d "off, javabuilder or bazel; default: \"javabuilder\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_limit_android_lint_to_android_constrained_java" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_prioritize_local_actions" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_run_android_lint_on_java_rules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "explicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noexplicit_java_test_deps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "host_jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noignore_unsupported_sandboxing" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_dont_use_javasourceinfoprovider" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_exclusive_test_sandboxed" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "incompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noincompatible_strict_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "j2objc_translation_flags" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "java_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nojava_deps" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "java_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nojava_header_compilation" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "java_launcher" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "java_runtime_version" -d "a string; default: \"local_jdk\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "javacopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "jvmopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "legacy_main_dex_list_generator" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "local_cpu_resources" -d "an integer, or \"HOST_CPUS\", optionally followed by [-|*]<float>.; default: \"HOST_CPUS\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "local_ram_resources" -d "an integer, or \"HOST_RAM\", optionally followed by [-|*]<float>.; default: \"HOST_RAM*.67\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "local_termination_grace_seconds" -d "an integer; default: \"15\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "package_path" -d "colon-separated list of options; default: \"%workspace%\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "plugin" -d "a build target label; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proguard_top" -d "a build target label; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proto_compiler" -d "a build target label; default: \"@bazel_tools//tools/proto:protoc\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proto_toolchain_for_cc" -d "a build target label; default: \"@bazel_tools//tools/proto:cc_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proto_toolchain_for_j2objc" -d "a build target label; default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proto_toolchain_for_java" -d "a build target label; default: \"@bazel_tools//tools/proto:java_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "proto_toolchain_for_javalite" -d "a build target label; default: \"@bazel_tools//tools/proto:javalite_toolchain\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "protocopt" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "runs_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noruns_per_test_detects_flakes" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "shell_executable" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "show_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noshow_loading_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_arg" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_filter" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_lang_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_result_expiration" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "notest_runner_fail_fast" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_sharding_strategy" -d "explicit or disabled; default: \"explicit\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_size_filters" -d "comma-separated list of values: small, medium, large or enormous; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_tag_filters" -d "comma-separated list of options; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "test_timeout_filters" -d "comma-separated list of values: short, moderate, long or eternal; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tool_java_language_version" -d "a string; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "tool_java_runtime_version" -d "a string; default: \"remotejdk_11\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -l "use_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nouse_ijars" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from test" -l "workspace_status_command" -d "a path; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from test" -fa "(bazel query -k 'tests(//...)' 2>/dev/null)"

complete -c bazel -n "not __bazel_seen_subcommand" -xa "version" -d "Prints version information for bazel." -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "check_direct_dependencies" -d "off, warning or error; default: \"warning\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "distdir" -d "a path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_repository_cache_hardlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_repository_cache_urls_as_default_canonical_id" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_repository_disable_download" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repository_downloader_retries" -d "an integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_scale_timeouts" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "http_timeout_scaling" -d "a double; default: \"1.0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "ignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noignore_dev_dependency" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "registry" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "repository_cache" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_oom_more_eagerly_threshold" -d "an integer; default: \"100\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_ui_max_stdouterr_bytes" -d "an integer in (-1)-1073741819 range; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "gnu_format" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nognu_format" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "repo_env" -d "a 'name=value' assignment with an optional value part; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repository_hash_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_verify_repository_rules" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "enable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noenable_bzlmod" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_action_resource_set" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_allow_tags_propagation" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_allow_top_level_aspects_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_analysis_test_call" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_cc_shared_library" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_disable_external_package" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_enable_android_migration_apis" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_get_fixed_configured_action_env" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_google_legacy_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_lazy_template_expansion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_platforms_api" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_repo_remote_exec" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_sibling_repository_layout" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_always_check_depset_elements" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_depset_for_libraries_to_link_getter" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disable_starlark_host_transitions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disable_target_provider_fields" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disallow_empty_glob" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disallow_legacy_javainfo" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disallow_struct_provider_syntax" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_existing_rules_immutable_view" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_java_common_parameters" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_new_actions_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_no_attr_license" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_no_implicit_file_export" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_no_rule_outputs_param" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_require_linker_input_cc_api" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_run_shell_command_string" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_stop_exporting_language_modules" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_struct_has_no_methods" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_top_level_aspects_require_providers" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_unambiguous_label_stringification" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_use_cc_configure_from_rules_cc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_visibility_private_attributes_at_definition" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "max_computation_steps" -d "a long integer; default: \"0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nested_set_depth_limit" -d "an integer; default: \"3500\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_do_not_split_linking_cmdline" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "keep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nokeep_state_after_build" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "skyframe_high_water_mark_threshold" -d "an integer; default: \"85\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "track_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "notrack_incremental_state" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "announce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noannounce_rc" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "attempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noattempt_to_print_relative_paths" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_backend" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobes_check_preceding_lifecycle_events" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_header" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_instance_name" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_keywords" -d "comma-separated list of options; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobes_lifecycle_events" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_outerr_buffer_size" -d "an integer; default: \"10240\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_outerr_chunk_size" -d "an integer; default: \"1048576\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_proxy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_results_url" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "bes_timeout" -d "An immutable length of time.; default: \"0s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_binary_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobuild_event_binary_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_json_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobuild_event_json_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_max_named_set_of_file_entries" -d "an integer; default: \"-1\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobuild_event_publish_all_actions" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_text_file" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nobuild_event_text_file_path_conversion" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_announce_profile_path" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_bep_target_summary" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_build_event_expand_filesets" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_build_event_fully_resolve_fileset_symlinks" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_build_event_upload_strategy" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_profile_additional_tasks" -d "phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_profile_include_primary_output" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_profile_include_target_label" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_record_metrics_for_all_mnemonics" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_stream_log_file_uploads" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_workspace_rules_log_file" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "generate_json_trace_profile" -d "a tri-state (auto, yes, no); default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "heap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noheap_dump_on_oom" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "legacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nolegacy_important_outputs" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "logging" -d "0 <= an integer <= 6; default: \"3\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "memory_profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "memory_profile_stable_heap_parameters" -d "two integers, separated by a comma; default: \"1,0\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "profile" -d "a path; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "slim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noslim_profile" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "starlark_cpu_profile" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "tool_tag" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "ui_event_filters" -d "Convert list of comma separated event kind to list of filters; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_resolved_file_instead_of_workspace" -d "a string; default: \"\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_downloader_config" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "build_metadata" -d "a 'name=value' assignment; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "color" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "config" -d "a string; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "curses" -d "yes, no or auto; default: \"auto\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "enable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noenable_platform_specific_config" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_credential_helper" -d "An (unresolved) path to a credential helper for a scope.; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_credential_helper_cache_duration" -d "An immutable length of time.; default: \"30m\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_credential_helper_timeout" -d "An immutable length of time.; default: \"5s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_skymeld_ui" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "experimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noexperimental_windows_watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "google_auth_scopes" -d "comma-separated list of options; default: \"https://www.googleapis.com/auth/cloud-platform\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "google_credentials" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "google_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nogoogle_default_credentials" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "grpc_keepalive_time" -d "An immutable length of time.; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "grpc_keepalive_timeout" -d "An immutable length of time.; default: \"20s\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_disallow_symlink_file_to_dir" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "incompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noincompatible_remove_rule_name_parameter" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "override_module" -d "an equals-separated mapping of module name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "override_repository" -d "an equals-separated mapping of repository name to path; may be used multiple times" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "progress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noprogress_in_terminal_title" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "show_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noshow_progress" -d "a boolean; default: \"true\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "show_progress_rate_limit" -d "a double; default: \"0.2\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "show_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "noshow_timestamps" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "tls_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "tls_client_certificate" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "tls_client_key" -d "a string; default: see description" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "ui_actions_shown" -d "an integer; default: \"8\"" -r
complete -c bazel -n "__fish_seen_subcommand_from version" -l "watchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version" -l "nowatchfs" -d "a boolean; default: \"false\""
complete -c bazel -n "__fish_seen_subcommand_from version"

