# https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts ;)

# TODO Is `set-option` identical to `set` (and `bind-key` to `bind`)?  Then replace to harmonize...

bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind-key m command-prompt -pman "split-window 'exec man %%'"

# Use Ctrl-A as the prefix, not CTRL-B
set -g prefix C-a
bind C-a send-prefix
unbind C-b

# Allow the mouse to interact with tmux
set -g mouse on

# Set xterm's title to the current pane's title
set -g set-titles on
set -g set-titles-string '#T'
# NB: Automatic renaming will be disabled for the window if you rename it manually.
set-window-option -g automatic-rename on
set-option -g allow-rename off

# Start numbering from 1, since 0 is all the way on the right of the keyboard
set -g base-index 1
set -g pane-base-index 1

# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use Ctrl-A - or 7 (where the / and | are, on a CH keyboard) to split panes
bind-key 7 split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# Use Shift-Alt-arrows keys without prefix key to switch panes
# (because Alt-Left/Right arrow is used to switch buffers in nano)
# (and Ctrl-Alt is already used for Workspaces in Gnome; even if not used, it's not interceptable)
# (even though Shift-Alt-arrows is also for marking, but so is Shift-Home/End, and "mark til file end/top" is too rare)
bind -n S-M-Left select-pane -L
bind -n S-M-Right select-pane -R
bind -n S-M-Up select-pane -U
bind -n S-M-Down select-pane -D

# Use Alt-T to create new tab ("window")
# (inspired by how Ctrl-Shift-T creates a new tab in gnome-terminal)
bind -n M-t new-window

# Use Alt-PgUp/Down without prefix key to switch tabs ("windows")
# (inspired by how Ctrl-PgUp/Down switches tabs in gnome-terminal)
bind -n M-Pageup  previous-window
bind -n M-Pagedown next-window

# TODO figure out how this works, and choose a suitable key mapping..
# Scroll with Shift PgUp/PgDn
# bind -n ?!-Pageup-?! copy-mode -u
# bind-key C copy-mode
# bind-key v paste-buffer

# TODO what does this do - useful?
# set-window-option -g xterm-keys on

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
set-option -g bell-action none

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'


# https://github.com/tmux-plugins/tmux-sensible

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# Make tmux messages displayed for 3/4 seconds (longer than default)
set -g display-time 4000
set -g display-panes-time 3000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# upgrade $TERM
set -g default-terminal "screen-256color"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
# TODO ? set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
