# Inspired by https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts ;)
# see also https://en.wikipedia.org/wiki/IBM_Common_User_Access :)
# AKA "I want the same keyboard shortcuts in TMUX as in Google Docs"

# Use "tmux list-keys" (or e.g. "tmux list-keys -T copy-mode") to see current keyboard shortcuts.

# Ctrl-A is the TMUX prefix (instead of default CTRL-B)
set-option -g prefix C-a
bind-key C-a send-prefix
unbind C-b

# Ctrl-A & R reloads this configuration file
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Ctrl-A & M allows to quickly see man pages (suggested by SZ)
bind-key m command-prompt -pman "split-window 'exec man %%'"

# Allow the mouse to interact with tmux
set-option -g mouse on

# Set xterm's title to the current pane's title
set-option -g set-titles on
set-option -g set-titles-string '#T'
# NB: Automatic renaming will be disabled for the window if you rename it manually
set-window-option -g automatic-rename on
set-option -g allow-rename off

# Start numbering from 1, since 0 is all the way on the right of the keyboard
set-option -g base-index 1
set-option -g pane-base-index 1

# Sane scrolling?
# set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use Ctrl-A - or 7 (where the / and | are, on a CH keyboard) to split panes
bind-key 7 split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# Use Shift-Alt-arrows keys without prefix key to switch panes
# (because Alt-Left/Right arrow is used to switch buffers in nano)
# (and Ctrl-Alt is already used for Workspaces in Gnome; even if not used, it's not interceptable)
# (even though Shift-Alt-arrows is also for marking, but so is Shift-Home/End, and "mark til file end/top" is too rare)
bind-key -n S-M-Left select-pane -L
bind-key -n S-M-Right select-pane -R
bind-key -n S-M-Up select-pane -U
bind-key -n S-M-Down select-pane -D

# Alt-F11 toggles between zoomed (occupying the whole of the window) and unzoomed (its normal position in the layout)
bind-key -n M-F11 resize-pane -Z
bind-key -n M-F12 resize-pane -Z

# Use Alt-T to create new tab ("window")
# (inspired by how Ctrl-Shift-T creates a new tab in gnome-terminal)
bind-key -n M-t new-window

# Use Alt-PgUp/Down without prefix key to switch tabs ("windows")
# (inspired by how Ctrl-PgUp/Down switches tabs in gnome-terminal)
bind-key -n C-PageUp  previous-window
bind-key -n C-PageDown next-window
unbind-key M-PageUp
unbind-key M-PageDown

# Shift-Alt PgUp/Down moves windows left/right
# (inspired by how Shift-Ctrl-PgUp/Down moves tabs in gnome-terminal)
bind-key -n C-M-PageUp swap-window -t -1
bind-key -n C-M-PageDown swap-window -t +1

# Shift-PgUp scrolls 1 page up, and enters copy/mode (where PgDown scrolls down); 1 more up is just PageUp, no Shift.
# So this is just a convenience shortcut to having to first press Alt-Esc and then PgUp.
bind-key -n S-PageUp copy-mode -eu

# Alt-Esc enters "copy mode", where...
#   Ctrl-F allows to Find (Search forward); n searches for the same string again, Shift-n reverse searches
#   Space (only Space, no need to Ctrl-Space..) begins selection
#   Ctrl-C copies the selection made
#   Alt-V pastes it (into any pane or window)
bind-key -n M-Escape copy-mode
bind-key -T copy-mode C-f command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode Space send-keys -X begin-selection
bind-key -T copy-mode C-c send-keys -X copy-selection-and-cancel
bind-key -n M-v paste-buffer

# Ctrl-Left/Right in copy mode jumps words <https://unix.stackexchange.com/a/555098/103272>
bind-key -T copy-mode C-Left send-keys -X previous-word
bind-key -T copy-mode C-Right send-keys -X next-word

# Customize word separators to that next/previous word in copy mode also stops at dots
set-option -g word-separators " -_@."

# Let Control-Left and Control-Right to move between words in Bash, Emacs, Vim and what not
set-window-option -g xterm-keys on

# enable activity alerts
setw -g monitor-activity on
set-option -g visual-activity on
set-option -g bell-action none

# soften status bar color from harsh green to light gray
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

# List of plugins for https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
# https://github.com/tmux-plugins/tmux-sensible
set -g @plugin 'tmux-plugins/tmux-sensible'

# https://github.com/tmux-plugins/tmux-sensible

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -sg escape-time 0

# increase scrollback buffer size
set-option -g history-limit 50000

# Make tmux messages displayed for 3/4 seconds (longer than default)
set-option -g display-time 4000
set-option -g display-panes-time 3000

# refresh 'status-left' and 'status-right' more often
set-option -g status-interval 5

# upgrade $TERM
set-option -g default-terminal "screen-256color"
# https://dandavison.github.io/delta/using-delta-with-tmux.html
set -ga terminal-overrides ",xterm-256color:Tc"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
# TODO ? set-option -g status-keys emacs

# focus events enabled for terminals that support them
set-option -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# start fish instead of bash in TMUX (even though user's default shell remains bash)
set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish

# https://github.com/tmux-plugins/tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
