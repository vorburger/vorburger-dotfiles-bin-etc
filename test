#!/usr/bin/env bash
set -euox pipefail
cd "$(dirname "$0")"

./container/devshell/test-ssh-agent vorburger


# Now run something quite similar to (copy/pasted from) test-ssh-agent.
# but use the 'vorburger' user created in the ./Dockerfile, instead of creating a 'tester' on the fly..
# (TODO avoid copy/paste from ../container/devshell/test-ssh-agent, which itself copy/pasted from ../sshd/test)

docker rm -f test-vorburger-again || true
docker run -d -p 22 --name test-vorburger-again vorburger
PORT="$(docker port test-vorburger-again | sed 's/22\/tcp -> 0.0.0.0://')"

rm -f /tmp/test-$$-id_rsa*
ssh-keygen -f /tmp/test-$$-id_rsa -P "" -C test-vorburger-again
docker cp /tmp/test-$$-id_rsa test-vorburger-again:/home/vorburger/.ssh/test.pubkey
docker exec test-vorburger-again cat /home/vorburger/.ssh/test.pubkey >> /home/vorburger/.ssh/authorized_keys
ssh -A -i /tmp/test-$$-id_rsa -o "StrictHostKeyChecking=no" -p $PORT vorburger@localhost ssh-add -l

# This tests if the local SSH YubiKey works (which does not work on CI)
ssh -A -o "StrictHostKeyChecking=no" -p $PORT vorburger@localhost ssh-add -l

docker rm -f test-vorburger-again

echo Test ~vorburger successful.
